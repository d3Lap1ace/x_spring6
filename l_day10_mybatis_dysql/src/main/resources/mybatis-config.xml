<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
    <settings>
        <!-- 开启mybatis执行过程的日志输出!
             value="STDOUT_LOGGING" 代表要输出到idea的控制台
             作用: 可以查看mybatis执行过程 sql语句拼接方式
        -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <setting name="autoMappingBehavior" value="FULL"/>
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="true"/>
    </settings>

    <typeAliases>
        <package name="com.atguigu.pojo"/>
    </typeAliases>

    <plugins>
        <plugin interceptor="com.github.pagehelper.PageInterceptor">
            <property name="helperDialect" value="mysql"/>
        </plugin>
    </plugins>

    <!--
      todo:
        作用: mybatis框架的整体配置文件(mybatis链接数据库信息,mybatis的功能开关,配置mapperxml文件的地址)
        标签:
            environments 数据库环境,链接的数据库信息
                default="environment的id属性值"
               开发: 开发时期(开发)[程序员自己的库] | 测试时期(测试)[仿真数据库] | 生产时期(上线)[真实库]
                     url driver username password
               environment一个数据库环境
                   id -> 当前环境的标识 (自定义)
            mappers mapper文件们
    -->

    <environments default="dev">
        <!-- environment表示配置Mybatis的一个具体的环境 -->
        <environment id="dev">
            <!-- Mybatis的内置的事务管理器
                 type="JDBC|MANAGED"
                    jdbc: 自动开启事务,没有自动提交
                    MANAGED : 不开启事务
             -->
            <transactionManager type="JDBC"/>


            <!-- 配置数据源
                配置数据库连接池信息!
                   type="POOLED|UNPOOLED"
                     UNPOOLED 不使用链接,只需要配置driver url username password
                     POOLED 使用`连接池`,除了四个属性,可以配置其他的核心参数,建议使用默认值即可
                     mybatis自带连接池
            -->
            <dataSource type="POOLED">
                <!-- 建立数据库连接的具体信息 -->
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis-example"/>
                <property name="username" value="root"/>
                <property name="password" value="root"/>
            </dataSource>
        </environment>

        <environment id="test">
            <!-- Mybatis的内置的事务管理器 -->
            <transactionManager type="JDBC"/>
            <!-- 配置数据源 -->
            <dataSource type="UNPOOLED">
                <!-- 建立数据库连接的具体信息 -->
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis-example?allowMultiQueries=true"/>
                <property name="username" value="root"/>
                <property name="password" value="root"/>
                <!--                <property name="poolMaximumActiveConnections" value="20"/>-->
            </dataSource>
        </environment>


    </environments>

    <!-- mapperxml文件生效
         mappers引入外部编写mapper.xml文件! 引入以后! 才可以查找我们写到的sql语句!
    -->
    <mappers>
        <!-- Mapper注册：指定Mybatis映射文件的具体位置 -->
        <!-- mapper标签：配置一个具体的Mapper映射文件 -->
        <!-- resource属性：指定Mapper映射文件的实际存储位置，这里需要使用一个以类路径根目录为基准的相对路径 -->
        <!--    对Maven工程的目录结构来说，resources目录下的内容会直接放入类路径，所以这里我们可以以resources目录为基准 -->

        <!-- mapper对应一个mapper.xml -->
        <!--
           todo:
              mapper resource="mappers/EmpMapper.xml" 每次引入mapper.xml

        -->
        <!--        <mapper resource="mappers/EmpMapper.xml"/>-->
        <!--
           todo:
              package name="x.x.x.x包" 按包导入
              包: mapper接口 | mapperxml所在的包 -> 他们两个共同的包
              要求1: mapper接口和mapperxml的命名必须相同
              要求2: mapper接口和mapperxml必须编译以后再同一个包!
                    1. mapper.xml放到mapper接口所在的包[java]  需要配置pom.xml 控制打包
                    2. resources文件夹下,创建和mapper接口同样的文件夹结构
                       注意: com/atguigu/mapper  com -> atguigu -> mapper
        -->
        <package name="com.atguigu.mapper"/>
    </mappers>

</configuration>